#include <iostream>
using namespace std;

void addRowToEnd(int arr[][10], int &rows, int newRow[], int cols)
{
  for (int i = 0; i < cols; i++)
    arr[rows][i] = newRow[i];
  rows++;
}

void addRowToStart(int arr[][10], int &rows, int newRow[], int cols)
{
  for (int i = rows; i > 0; --i)
    for (int j = 0; j < cols; j++)
      arr[i][j] = arr[i - 1][j];
  for (int j = 0; j < cols; j++)
    arr[0][j] = newRow[j];
  rows++;
}

void insertRow(int arr[][10], int &rows, int newRow[], int cols, int position)
{
  for (int i = rows; i > position; --i)
    for (int j = 0; j < cols; ++j)
      arr[i][j] = arr[i - 1][j];
  for (int j = 0; j < cols; ++j)
    arr[position][j] = newRow[j];
  rows++;
}

void deleteRow(int arr[][10], int &rows, int cols, int position)
{
  for (int i = position; i < rows - 1; ++i)
    for (int j = 0; j < cols; ++j)
      arr[i][j] = arr[i + 1][j];
  rows--;
}

void printArray(int arr[][10], int rows, int cols)
{
  for (int i = 0; i < rows; ++i)
  {
    for (int j = 0; j < cols; ++j)
      cout << arr[i][j] << " ";
    cout << endl;
  }
}

int main()
{
  const int cols = 10;

  int arr1[10][cols];
  int rows1 = 0;

  int firstrow[cols] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 0};
  addRowToEnd(arr1, rows1, firstrow, cols);

  int secondrow[cols] = {10, 11, 12, 13, 14, 15, 16, 17, 18, 19};
  addRowToEnd(arr1, rows1, secondrow, cols);

  cout << "End After :" << endl;
  printArray(arr1, rows1, cols);

  int rowInsert[cols] = {100, 101, 102, 103, 104, 105, 106, 107, 108, 109};
  insertRow(arr1, rows1, rowInsert, cols, 1);

  cout << "After enter 1: " << endl;
  printArray(arr1, rows1, cols);

  deleteRow(arr1, rows1, cols, 0);

  cout << "After delete 0: " << endl;
  printArray(arr1, rows1, cols);

  int arr2[10][cols];
  int rows2 = 0;

  int rowA[cols] = {1, 2, 5, 3, 6, 4, 7, 9, 8, 0};
  addRowToStart(arr2, rows2, rowA, cols);

  int rowB[cols] = {2, 1, 3, 4, 7, 5, 9, 7, 3, 0};
  addRowToStart(arr2, rows2, rowB, cols);

  cout << "Add to start: " << endl;
  printArray(arr2, rows2, cols);
}
